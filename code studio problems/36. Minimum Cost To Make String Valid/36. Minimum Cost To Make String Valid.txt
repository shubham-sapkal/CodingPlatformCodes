#include<stack>

int findMinimumCost(string str) {
    
    // Odd condition
    if(str.length() % 2 == 1)
    {
        return -1;
    }
    
    stack<char> s;
    
    for(int i=0; i<str.length(); i++)
    {
        char ch = str[i];
        
        if(ch == '{'){
            s.push(ch);
        }
        else{
            // ch is closed brace
            if(!s.empty() && s.top() == '{'){
                s.pop();
            }
            else{
                s.push(ch);
            }
        }
        
    }
    
    // stack contains invalid expression
        int open = 0, close = 0;
        while(!s.empty())
        {
            if(s.top() == '{'){
                open++;
            }
            else{
                close++;
            }
            s.pop();
        }
        
        int ans = (open+1)/2 + (close+1)/2;
    
        return ans;
  
    
}